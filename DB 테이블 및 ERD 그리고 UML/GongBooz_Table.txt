--1.음악
----------------------------------------------------------------
--@ASMR 음악 테이블생성
create table musicList(
m_name varchar2(10),
m_url varchar2(200)
);
insert into musicList values('rain', './resources/audio/rain.mp3');
insert into musicList values('fire',  './resources/audio/fire.mp3');
insert into musicList values('maemi', './resources/audio/maemi.wav');
insert into musicList values('cafe', './resources/audio/cafe.mp3');

commit;

--2.회원가입
-----------------------------------------------------------------
--@회원가입 테이블생성
CREATE TABLE gb_MEMBER(
    MEMBERMAIL VARCHAR(50) NOT NULL,
    USERID VARCHAR2(40) NOT NULL,
    USERPASS VARCHAR2(100) NOT NULL,
    USERNAME VARCHAR2(40) NOT NULL,
    REGDATE DATE DEFAULT SYSDATE,
    PRIMARY KEY(USERID)
);

select * from gb_member;

--3.게시판
-----------------------------------------------------------------
--@게시판 테이블생성
create table gb_board(
 bno number not null,
 title varchar2(100) not null,
 content clob not null,
 writer varchar2(100) not null,
 regdate date default sysdate,
 primary key(bno),
 HIT NUMBER DEFAULT 0,
 recnt number default 0 not null
);
--@게시판 시퀀스 생성
CREATE SEQUENCE GB_BOARD_SEQ
START WITH 1
INCREMENT BY 1;

--@게시판 댓글 테이블 생성
create table gb_reply (
    bno number not null,
    rno number not null,
    content varchar2(1000) not null,
    writer varchar2(50) not null,
    regdate date default sysdate,
    primary key(bno, rno),
    CONSTRAINT gb_reply_bno FOREIGN KEY(bno) REFERENCES gb_board(bno) on delete cascade
);

--@게시판 댓글 시퀀스 생성
create sequence gb_reply_seq START WITH 1 MINVALUE 0;

--@게시판 파일 테이블 생성 
CREATE TABLE GB_FILE
(
    FILE_NO NUMBER,                         --파일 번호
    BNO NUMBER NOT NULL,                    --게시판 번호
    ORG_FILE_NAME VARCHAR2(260) NOT NULL,   --원본 파일 이름
    STORED_FILE_NAME VARCHAR2(36) NOT NULL, --변경된 파일 이름
    FILE_SIZE NUMBER,                       --파일 크기
    REGDATE DATE DEFAULT SYSDATE NOT NULL,  --파일등록일
    DEL_GB VARCHAR2(1) DEFAULT 'N' NOT NULL,--삭제구분
    PRIMARY KEY(FILE_NO)                    --기본키 FILE_NO
);

--@게시판 파일 시퀀스 생성
CREATE SEQUENCE SEQ_GB_FILE_NO
START WITH 1 
INCREMENT BY 1 
NOMAXVALUE NOCACHE;

commit;

--4.스터디 모집 
----------------------------------------------------------------
--@스터디 모집 테이블생성
create table studyroom(
    study_name varchar2(50) constraint pk_stroom primary key,
    study_tag varchar2(30) not null,
    region varchar2(30),
    max_number number(5)    
);
--studyroom 생성 후 alter문으로 신청 가능 멤버 수를 나타내는 cur_number 칼럼을 추가
alter table studyroom add(cur_number number(5));
--cur_number의 초기값을 max_number 신청 정원으로 한다.
update studyroom s1 set cur_number = (select max_number from studyroom s2 where s1.study_name = s2.study_name);

commit;
----------------------------------------------------------------
----스터디 이름, 태그명, 오프라인 장소, 정원, 신청 가능 인원 으로 insert를 받는다.
--화면 상에서는 스터디 등록 시, cur_number가 max_number의 수로 자동으로 들어가도록 설정했다.
insert into studyroom values('토익스피킹 스터디','외국어','신논현 투썸','5','5');
insert into studyroom values('기술 면접 준비','면접','이수역 부근','12','12');
insert into studyroom values('중간고사 스터디윗미','스터디윗미','기타','30','30');
insert into studyroom values('2차 가창 실기','기타','부산 해운대 중동','7','7');
insert into studyroom values('테니스 동호회 회원 모집합니다','대외활동','용인수지체육공원','20','20');
insert into studyroom values('파이썬 기초','스터디윗미','전북 익산 풀덤','15','15');
insert into studyroom values('논술 코칭','스터디윗미','대치 한티역 K논술학원','40','40');
insert into studyroom values('인국공 토론 면접 같이 준비해요','면접','한양대 부근','8','8');

-----------------------------------------------------------------
